{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gkgpa\\\\Desktop\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    // 초기화하고 싶은 것은 생성자 안에 코드를 작성한다.\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'create',\n      selected_content_id: 1,\n      subject: {\n        title: 'WEB',\n        sub: \"world wide web!\"\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is HyperText Markup Language.'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n\n  render() {\n    let _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'read') {\n      let i = 0;\n\n      while (i < this.state.contents.length) {\n        let data = this.state.contents[i];\n\n        if (data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n\n        i = i + 1;\n      }\n\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          this.max_content_id += 1;\n          this.state.contents.push({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n          this.setState({\n            contents: this.state.contents\n          });\n          console.log(_title, _desc);\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          this.setState({\n            mode: 'read',\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents // App.js에서 this.state에 contents라는 props의 초기값을 할당하였고 TOC 태그 요소에 data={this.state.contents}를 넣어줌\n        // -> TOC.js는 data 요소를 가져다가 사용할 수 있는 것\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), _article]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gkgpa/Desktop/react-app/src/App.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","CreateContent","toHaveStyle","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","render","_title","_desc","_article","i","length","data","push","setState","console","log","bind","Number","_mode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\n\nclass App extends Component {\n  constructor(props) {  // 초기화하고 싶은 것은 생성자 안에 코드를 작성한다.\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode:'create',\n      selected_content_id:1,\n      subject:{title:'WEB', sub:\"world wide web!\"},\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is HyperText Markup Language.'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n\n  render() {\n    let _title, _desc, _article = null;\n    if(this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    }\n    else if(this.state.mode === 'read') {\n      let i = 0;\n      while(i < this.state.contents.length){\n        let data = this.state.contents[i];\n        if(data.id === this.state.selected_content_id){\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n        i = i + 1;\n      }\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    }\n    else if(this.state.mode === 'create') {\n      _article = <CreateContent onSubmit={function(_title, _desc) {\n        this.max_content_id += 1;\n        this.state.contents.push(\n          {id:this.max_content_id, title:_title, desc:_desc});\n          this.setState({\n            contents:this.state.contents\n          });\n        console.log(_title, _desc);\n      }.bind(this)}></CreateContent>\n    }\n\n    return (\n      <div className=\"App\">\n        <Subject\n          title={this.state.subject.title}\n          sub={this.state.subject.sub}\n          onChangePage = {function(){\n            this.setState({mode:'welcome'});\n          }.bind(this)}\n          >\n        </Subject>\n        <TOC\n          onChangePage={function(id) {\n            this.setState({\n              mode:'read',\n              selected_content_id:Number(id)\n            });\n          }.bind(this)}\n          data={this.state.contents}  // App.js에서 this.state에 contents라는 props의 초기값을 할당하였고 TOC 태그 요소에 data={this.state.contents}를 넣어줌\n                                      // -> TOC.js는 data 요소를 가져다가 사용할 수 있는 것\n        ></TOC>  \n        <Control onChangeMode={function(_mode) {\n          this.setState({\n            mode:_mode\n          })\n        }.bind(this)}></Control>      \n        {_article}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}