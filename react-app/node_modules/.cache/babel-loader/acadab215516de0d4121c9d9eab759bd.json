{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gkgpa\\\\Desktop\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    // 초기화하고 싶은 것은 생성자 안에 코드를 작성한다.\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode: 'create',\n      selected_content_id: 1,\n      subject: {\n        title: 'WEB',\n        sub: \"world wide web!\"\n      },\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is HyperText Markup Language.'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n\n  getReadContent() {\n    let i = 0;\n\n    while (i < this.state.contents.length) {\n      let data = this.state.contents[i];\n\n      if (data.id === this.state.selected_content_id) {\n        return data;\n        break;\n      }\n\n      i = i + 1;\n    }\n  }\n\n  getContent() {\n    let _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _title,\n        desc: _desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'read') {\n      let _content = this.getReadContent();\n\n      _article = /*#__PURE__*/_jsxDEV(ReadContent, {\n        title: _content.title,\n        desc: _content.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          this.max_content_id += 1;\n\n          let _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === 'update') {\n      let _content = this.getReadContent();\n\n      _article = /*#__PURE__*/_jsxDEV(UpdateContent, {\n        data: _content,\n        onSubmit: function (_id, _title, _desc) {\n          let _contents = Array.from(this.state.contents);\n\n          let i = 0;\n\n          while (i < _contents.length) {\n            if (_contents[i].id === _id) {\n              _contents[i] = {\n                id: _id,\n                title: _title,\n                desc: _desc\n              };\n              break;\n            }\n\n            i += 1;\n          }\n\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this);\n    }\n\n    return _article;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject, {\n        title: this.state.subject.title,\n        sub: this.state.subject.sub,\n        onChangePage: function () {\n          this.setState({\n            mode: 'welcome'\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          this.setState({\n            mode: 'read',\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents // App.js에서 this.state에 contents라는 props의 초기값을 할당하였고 TOC 태그 요소에 data={this.state.contents}를 넣어줌\n        // -> TOC.js는 data 요소를 가져다가 사용할 수 있는 것\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), this.getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gkgpa/Desktop/react-app/src/App.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","CreateContent","UpdateContent","toHaveStyle","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","welcome","desc","contents","id","getReadContent","i","length","data","getContent","_title","_desc","_article","_content","_contents","concat","setState","bind","_id","Array","from","render","Number","_mode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,WAAT,QAA4B,yCAA5B;;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAG;AACpB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,QADM;AAEXC,MAAAA,mBAAmB,EAAC,CAFT;AAGXC,MAAAA,OAAO,EAAC;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAcC,QAAAA,GAAG,EAAC;AAAlB,OAHG;AAIXC,MAAAA,OAAO,EAAC;AAACF,QAAAA,KAAK,EAAC,SAAP;AAAkBG,QAAAA,IAAI,EAAC;AAAvB,OAJG;AAKXC,MAAAA,QAAQ,EAAC,CACP;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,MAAb;AAAqBG,QAAAA,IAAI,EAAC;AAA1B,OADO,EAEP;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,KAAb;AAAoBG,QAAAA,IAAI,EAAC;AAAzB,OAFO,EAGP;AAACE,QAAAA,EAAE,EAAC,CAAJ;AAAOL,QAAAA,KAAK,EAAC,YAAb;AAA2BG,QAAAA,IAAI,EAAC;AAAhC,OAHO;AALE,KAAb;AAWD;;AACDG,EAAAA,cAAc,GAAG;AACf,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAG,KAAKX,KAAL,CAAWQ,QAAX,CAAoBI,MAA9B,EAAqC;AACnC,UAAIC,IAAI,GAAG,KAAKb,KAAL,CAAWQ,QAAX,CAAoBG,CAApB,CAAX;;AACA,UAAGE,IAAI,CAACJ,EAAL,KAAY,KAAKT,KAAL,CAAWE,mBAA1B,EAA8C;AAC5C,eAAOW,IAAP;AACA;AACD;;AACDF,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACH;AACF;;AAECG,EAAAA,UAAU,GAAG;AACX,QAAIC,MAAJ;AAAA,QAAYC,KAAZ;AAAA,QAAmBC,QAAQ,GAAG,IAA9B;;AACA,QAAG,KAAKjB,KAAL,CAAWC,IAAX,KAAoB,SAAvB,EAAkC;AAChCc,MAAAA,MAAM,GAAG,KAAKf,KAAL,CAAWM,OAAX,CAAmBF,KAA5B;AACAY,MAAAA,KAAK,GAAG,KAAKhB,KAAL,CAAWM,OAAX,CAAmBC,IAA3B;AACAU,MAAAA,QAAQ,gBAAG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEF,MAApB;AAA4B,QAAA,IAAI,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAX;AACD,KAJD,MAKK,IAAG,KAAKhB,KAAL,CAAWC,IAAX,KAAoB,MAAvB,EAA+B;AAClC,UAAIiB,QAAQ,GAAG,KAAKR,cAAL,EAAf;;AACAO,MAAAA,QAAQ,gBAAG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEC,QAAQ,CAACd,KAA7B;AAAoC,QAAA,IAAI,EAAEc,QAAQ,CAACX;AAAnD;AAAA;AAAA;AAAA;AAAA,cAAX;AACD,KAHI,MAIA,IAAG,KAAKP,KAAL,CAAWC,IAAX,KAAoB,QAAvB,EAAiC;AACpCgB,MAAAA,QAAQ,gBAAG,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,UAASF,MAAT,EAAiBC,KAAjB,EAAwB;AAC1D,eAAKjB,cAAL,IAAuB,CAAvB;;AACA,cAAIoB,SAAS,GAAG,KAAKnB,KAAL,CAAWQ,QAAX,CAAoBY,MAApB,CACd;AAACX,YAAAA,EAAE,EAAC,KAAKV,cAAT;AAAyBK,YAAAA,KAAK,EAACW,MAA/B;AAAuCR,YAAAA,IAAI,EAACS;AAA5C,WADc,CAAhB;;AAGE,eAAKK,QAAL,CAAc;AACZb,YAAAA,QAAQ,EAACW;AADG,WAAd;AAGH,SARmC,CAQlCG,IARkC,CAQ7B,IAR6B;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAX;AASD,KAVI,MAWA,IAAG,KAAKtB,KAAL,CAAWC,IAAX,KAAoB,QAAvB,EAAiC;AACpC,UAAIiB,QAAQ,GAAG,KAAKR,cAAL,EAAf;;AACAO,MAAAA,QAAQ,gBAAG,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEC,QAArB;AAA+B,QAAA,QAAQ,EAChD,UAASK,GAAT,EAAcR,MAAd,EAAsBC,KAAtB,EAA6B;AAC3B,cAAIG,SAAS,GAAGK,KAAK,CAACC,IAAN,CAAW,KAAKzB,KAAL,CAAWQ,QAAtB,CAAhB;;AACA,cAAIG,CAAC,GAAG,CAAR;;AACA,iBAAMA,CAAC,GAAGQ,SAAS,CAACP,MAApB,EAA2B;AACzB,gBAAGO,SAAS,CAACR,CAAD,CAAT,CAAaF,EAAb,KAAoBc,GAAvB,EAA2B;AACzBJ,cAAAA,SAAS,CAACR,CAAD,CAAT,GAAe;AAACF,gBAAAA,EAAE,EAACc,GAAJ;AAASnB,gBAAAA,KAAK,EAACW,MAAf;AAAuBR,gBAAAA,IAAI,EAACS;AAA5B,eAAf;AACA;AACD;;AACDL,YAAAA,CAAC,IAAI,CAAL;AACD;;AACD,eAAKU,QAAL,CAAc;AACZb,YAAAA,QAAQ,EAACW;AADG,WAAd;AAGD,SAbD,CAaEG,IAbF,CAaO,IAbP;AADS;AAAA;AAAA;AAAA;AAAA,cAAX;AAeD;;AAED,WAAOL,QAAP;AACD;;AACDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWG,OAAX,CAAmBC,KAD5B;AAEE,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,OAAX,CAAmBE,GAF1B;AAGE,QAAA,YAAY,EAAI,YAAU;AACxB,eAAKgB,QAAL,CAAc;AAACpB,YAAAA,IAAI,EAAC;AAAN,WAAd;AACD,SAFe,CAEdqB,IAFc,CAET,IAFS;AAHlB;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,GAAD;AACE,QAAA,YAAY,EAAE,UAASb,EAAT,EAAa;AACzB,eAAKY,QAAL,CAAc;AACZpB,YAAAA,IAAI,EAAC,MADO;AAEZC,YAAAA,mBAAmB,EAACyB,MAAM,CAAClB,EAAD;AAFd,WAAd;AAID,SALa,CAKZa,IALY,CAKP,IALO,CADhB;AAOE,QAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWQ,QAPnB,CAO8B;AACA;;AAR9B;AAAA;AAAA;AAAA;AAAA,cATF,eAmBE,QAAC,OAAD;AAAS,QAAA,YAAY,EAAE,UAASoB,KAAT,EAAgB;AACrC,eAAKP,QAAL,CAAc;AACZpB,YAAAA,IAAI,EAAC2B;AADO,WAAd;AAGD,SAJsB,CAIrBN,IAJqB,CAIhB,IAJgB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAnBF,EAwBG,KAAKR,UAAL,EAxBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AApGyB;;AAuG5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TOC from './components/TOC';\nimport ReadContent from './components/ReadContent';\nimport Subject from './components/Subject';\nimport Control from './components/Control';\nimport CreateContent from './components/CreateContent';\nimport UpdateContent from './components/UpdateContent';\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\n\nclass App extends Component {\n  constructor(props) {  // 초기화하고 싶은 것은 생성자 안에 코드를 작성한다.\n    super(props);\n    this.max_content_id = 3;\n    this.state = {\n      mode:'create',\n      selected_content_id:1,\n      subject:{title:'WEB', sub:\"world wide web!\"},\n      welcome:{title:'Welcome', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is HyperText Markup Language.'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n  getReadContent() {\n    let i = 0;\n    while(i < this.state.contents.length){\n      let data = this.state.contents[i];\n      if(data.id === this.state.selected_content_id){\n        return data;\n        break;\n      }\n      i = i + 1;\n  }\n}\n\n  getContent() {\n    let _title, _desc, _article = null;\n    if(this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    }\n    else if(this.state.mode === 'read') {\n      let _content = this.getReadContent();\n      _article = <ReadContent title={_content.title} desc={_content.desc}></ReadContent>\n    }\n    else if(this.state.mode === 'create') {\n      _article = <CreateContent onSubmit={function(_title, _desc) {\n        this.max_content_id += 1;\n        let _contents = this.state.contents.concat(\n          {id:this.max_content_id, title:_title, desc:_desc}\n        )\n          this.setState({\n            contents:_contents\n          });\n      }.bind(this)}></CreateContent>\n    }\n    else if(this.state.mode === 'update') {\n      let _content = this.getReadContent();\n      _article = <UpdateContent data={_content} onSubmit={\n        function(_id, _title, _desc) {\n          let _contents = Array.from(this.state.contents);\n          let i = 0;\n          while(i < _contents.length){\n            if(_contents[i].id === _id){\n              _contents[i] = {id:_id, title:_title, desc:_desc};\n              break;\n            }\n            i += 1;\n          }\n          this.setState({\n            contents:_contents\n          });\n        }.bind(this)}></UpdateContent>\n    }\n\n    return _article;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Subject\n          title={this.state.subject.title}\n          sub={this.state.subject.sub}\n          onChangePage = {function(){\n            this.setState({mode:'welcome'});\n          }.bind(this)}\n          >\n        </Subject>\n        <TOC\n          onChangePage={function(id) {\n            this.setState({\n              mode:'read',\n              selected_content_id:Number(id)\n            });\n          }.bind(this)}\n          data={this.state.contents}  // App.js에서 this.state에 contents라는 props의 초기값을 할당하였고 TOC 태그 요소에 data={this.state.contents}를 넣어줌\n                                      // -> TOC.js는 data 요소를 가져다가 사용할 수 있는 것\n        ></TOC>  \n        <Control onChangeMode={function(_mode) {\n          this.setState({\n            mode:_mode\n          })\n        }.bind(this)}></Control>      \n        {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}